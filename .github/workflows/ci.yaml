name: Dining App CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  FRONTEND_IMAGE: arnavsingh03/dining-frontend
  BACKEND_IMAGE: arnavsingh03/dining-backend

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: dining-frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd dining-frontend
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./dining-frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Install backend dependencies
        run: |
          cd dining-app-backend
          go mod download

      - name: Run backend tests
        run: |
          cd dining-app-backend
          go test ./...

  backend-build:
    needs: backend-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./dining-app-backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-values:
    needs: [frontend-build, backend-build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Update values.yaml with latest commit SHA
        run: |
          cd helm/dining-app-chart
          # Update frontend image tag
          sed -i "s/^    tag: \".*\"/    tag: \"${{ github.sha }}\"/" values.yaml
          # Update backend image tag
          sed -i "s/^    tag: \".*\"/    tag: \"${{ github.sha }}\"/" values.yaml

      - name: Commit and push changes
        run: |
          git add helm/dining-app-chart/values.yaml
          git commit -m "Update image tags to ${{ github.sha }} [skip ci]"
          git push

  deploy:
    needs: [update-values]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name dining-app-cluster-new --region us-east-1

      - name: Deploy to EKS
        run: |
          cd helm/dining-app-chart
          helm upgrade --install dining-app .
